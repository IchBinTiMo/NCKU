

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                                           Thu Oct 28 23:44:22 2021


     1                           	processor	18F4520
     2                           	pagewidth 132
     3                           	opt	flic
     4                           	psect	udata_acs,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     5                           	psect	udata_bank0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	udata_bank1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	udata_bank2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     8                           	psect	udata_bank3,global,class=BANK3,space=1,delta=1,lowdata,noexec
     9                           	psect	udata_bank4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    10                           	psect	udata_bank5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	udata,global,class=RAM,space=1,delta=1,noexec
    12                           	psect	code,global,reloc=2,class=CODE,delta=1
    13                           	psect	data,global,reloc=2,class=CONST,delta=1,noexec
    14                           	psect	edata,global,class=EEDATA,space=3,delta=2,noexec
    15                           	psect	mytext,local,reloc=2,class=CODE,delta=1
    16  0000                     
    17                           	psect	edata
    18  0000                     stk_offset	set	0
    19  0000                     auto_size	set	0
    20                           
    21                           ; stack_auto defines a symbol /name/_offset which equates to the
    22                           ; stack offset of the auto object in question
    23  000000                     
    24                           ; stack_param defines a symbol /name/_offset which equates to the
    25                           ; stack offset of the parameter object in question
    26  000000                     
    27                           ; alloc_stack adjusts the SP to allocate space for auto objects
    28                           ; it also links in to the btemp symbol so that can be used
    29  000000                     
    30                           ; restore_stack adjusts the SP to remove all auto and parameter
    31                           ; objects from the stack prior to returning from a function
    32  000000                     
    33                           	psect	mytext
    34  007F78                     _divide_signed:
    35                           	callstack 0
    36  007F78  6A92               	clrf	3986,c
    37  007F7A  6A94               	clrf	3988,c
    38  007F7C  6A95               	clrf	3989,c
    39  007F7E  6A02               	clrf	2,c
    40  007F80  6A03               	clrf	3,c
    41  007F82  C001 F003          	movff	1,3
    42  007F86  6E01               	movwf	1,c
    43  007F88  0E08               	movlw	8
    44  007F8A  6E92               	movwf	3986,c
    45  007F8C  6AE8               	clrf	wreg,c
    46  007F8E  BE03               	btfsc	3,7,c
    47  007F90  0E01               	movlw	1
    48  007F92  6E95               	movwf	3989,c
    49  007F94  6AE8               	clrf	wreg,c
    50  007F96  BE01               	btfsc	1,7,c
    51  007F98  0E01               	movlw	1
    52  007F9A  6E94               	movwf	3988,c
    53  007F9C  0E01               	movlw	1
    54  007F9E  B094               	btfsc	3988,0,c
    55  007FA0  6C01               	negf	1,c
    56  007FA2  B095               	btfsc	3989,0,c
    57  007FA4  6C03               	negf	3,c
    58  007FA6  6AE8               	clrf	wreg,c
    59  007FA8  2403               	addwf	3,w,c
    60  007FAA  4602               	rlncf	2,f,c
    61  007FAC  9002               	bcf	2,0,c
    62  007FAE  BE01               	btfsc	1,7,c
    63  007FB0  8002               	bsf	2,0,c
    64  007FB2  4601               	rlncf	1,f,c
    65  007FB4  9001               	bcf	1,0,c
    66  007FB6  D80A               	rcall	loop
    67  007FB8  4202               	rrncf	2,f,c
    68  007FBA  B094               	btfsc	3988,0,c
    69  007FBC  6C01               	negf	1,c
    70  007FBE  B095               	btfsc	3989,0,c
    71  007FC0  6C01               	negf	1,c
    72  007FC2  B094               	btfsc	3988,0,c
    73  007FC4  6C02               	negf	2,c
    74  007FC6  0E0F               	movlw	15
    75  007FC8  1602               	andwf	2,f,c
    76  007FCA  0012               	return	
    77  007FCC                     loop:
    78  007FCC  6AE8               	clrf	wreg,c
    79  007FCE  2403               	addwf	3,w,c
    80  007FD0  5E02               	subwf	2,f,c
    81  007FD2  AE02               	btfss	2,7,c
    82  007FD4  D00B               	goto	greater_than_0
    83  007FD6  6AE8               	clrf	wreg,c
    84  007FD8  2403               	addwf	3,w,c
    85  007FDA  2602               	addwf	2,f,c
    86  007FDC  4602               	rlncf	2,f,c
    87  007FDE  9002               	bcf	2,0,c
    88  007FE0  BE01               	btfsc	1,7,c
    89  007FE2  8002               	bsf	2,0,c
    90  007FE4  4601               	rlncf	1,f,c
    91  007FE6  9001               	bcf	1,0,c
    92  007FE8  9001               	bcf	1,0,c
    93  007FEA  D007               	goto	counter
    94  007FEC                     greater_than_0:
    95  007FEC  4602               	rlncf	2,f,c
    96  007FEE  9002               	bcf	2,0,c
    97  007FF0  BE01               	btfsc	1,7,c
    98  007FF2  8002               	bsf	2,0,c
    99  007FF4  4601               	rlncf	1,f,c
   100  007FF6  9001               	bcf	1,0,c
   101  007FF8  8001               	bsf	1,0,c
   102  007FFA                     counter:
   103  007FFA  2E92               	decfsz	3986,f,c
   104  007FFC  D7E7               	goto	loop
   105  007FFE  0012               	return	
   106                           tosu	equ	0xFFF
   107                           tosh	equ	0xFFE
   108                           tosl	equ	0xFFD
   109                           stkptr	equ	0xFFC
   110                           pclatu	equ	0xFFB
   111                           pclath	equ	0xFFA
   112                           pcl	equ	0xFF9
   113                           tblptru	equ	0xFF8
   114                           tblptrh	equ	0xFF7
   115                           tblptrl	equ	0xFF6
   116                           tablat	equ	0xFF5
   117                           prodh	equ	0xFF4
   118                           prodl	equ	0xFF3
   119                           indf0	equ	0xFEF
   120                           postinc0	equ	0xFEE
   121                           postdec0	equ	0xFED
   122                           preinc0	equ	0xFEC
   123                           plusw0	equ	0xFEB
   124                           fsr0h	equ	0xFEA
   125                           fsr0l	equ	0xFE9
   126                           wreg	equ	0xFE8
   127                           indf1	equ	0xFE7
   128                           postinc1	equ	0xFE6
   129                           postdec1	equ	0xFE5
   130                           preinc1	equ	0xFE4
   131                           plusw1	equ	0xFE3
   132                           fsr1h	equ	0xFE2
   133                           fsr1l	equ	0xFE1
   134                           bsr	equ	0xFE0
   135                           indf2	equ	0xFDF
   136                           postinc2	equ	0xFDE
   137                           postdec2	equ	0xFDD
   138                           preinc2	equ	0xFDC
   139                           plusw2	equ	0xFDB
   140                           fsr2h	equ	0xFDA
   141                           fsr2l	equ	0xFD9
   142                           status	equ	0xFD8


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                               Thu Oct 28 23:44:22 2021

                        WREG 000FE8                          loop 7FCC                         TRISA 000F92  
                       TRISC 000F94                         TRISD 000F95                       isa$std 000001  
                     counter 7FFA                greater_than_0 7FEC                     isa$xinst 000000  
              _divide_signed 7F78  
